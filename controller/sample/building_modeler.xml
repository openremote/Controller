<?xml version="1.0" ?><map><entry><string>macros</string><list></list></entry><entry><string>configuration</string><set><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142617</oid><category>velbus</category><name>protocol.velbus.classname</name><value>org.openremote.controller.protocol.velbus.VelbusCommandBuilder</value><hint>Velbus CommandBuilder class. This entry should not be changed.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142648</oid><category>roundrobin</category><name>controller.roundrobin.multicast.address</name><value>224.0.1.200</value><hint>Multicast address for roundrobin NOTE: This option is useful only on the situation of "controller.roundrobin.on" is true.</hint><validation>((25[0-5]|2[0-4]\d|1?\d?\d)\.){3}(25[0-5]|2[0-4]\d|1?\d?\d)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142636</oid><category>lutron_homeworks</category><name>lutron_homeworks.password</name><value>openremote</value><hint>Password used for connection to Lutron HomeWorks processor, as defined on Link 9 in HomeWorks configuration.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142615</oid><category>z-wave</category><name>zwave.pad.host</name><value>localhost</value><hint>If PAD is used for communication this defines the host/ip of the machine the PAD daemon is running on.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142621</oid><category>enocean</category><name>enocean.commLayer</name><value>RXTX</value><hint>Choose either PAD or RXTX depending on your communication layer to use.</hint><validation>.+</validation><options>PAD,RXTX</options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142644</oid><category>Domintell</category><name>domintell.port</name><value>17481</value><hint>UDP port of the DETH02 interface used to connect to the Domintell system, mandatory.</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142623</oid><category>z-wave</category><name>zwave.commLayer</name><value>RXTX</value><hint>Choose either PAD or RXTX depending on your communication layer to use.</hint><validation>.+</validation><options>PAD,RXTX</options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142616</oid><category>security</category><name>resource.upload.enable</name><value>true</value><hint>If deploying the controller to public network, always disable (set to 'false') this resource upload feature. This is a convenience feature for home users for easy deployment of the controller in cases where all users of the network are trusted, or the controller is still being configured and tested. Even home users should consider disabling this feature once they're happy and want to lock down the configuration of the controller. When this feature is disabled, copy all the controller configuration files manually to a directory pointed by the 'resource.path' property below. Access to this directory in the filesystem should be properly secured with access restrictions.</hint><validation>.+</validation><options>true,false</options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142625</oid><category>z-wave</category><name>protocol.zwave.classname</name><value>org.openremote.controller.protocol.zwave.ZWaveCommandBuilder</value><hint>Z-Wave CommandBuilder class. This entry should not be changed.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142618</oid><category>infrared</category><name>copy.lircd.conf.on</name><value>true</value><hint>If true, controller will copy a deployed lircd.conf to lircd.conf.path of the user TODO : This is disruptive to the user's system. The additional remotes deployed to OR controller should be concatenated to the end of an existing lircd.conf file.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142620</oid><category>Domintell</category><name>domintell.address</name><value>192.168.1.1</value><hint>Address of the DETH02 interface used to connect to the Domintell system, mandatory.</hint><validation>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142628</oid><category>advance</category><name>multicast.port</name><value>3333</value><hint>multicast port for listening to the iPhone auto discovery</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142646</oid><category>velbus</category><name>velbus.server.hostnames</name><value>127.0.0.1</value><hint>Address or name of the Velbus &lt;&gt; TCP server. If multiple networks are needed then these should be entered as ‘;’ separated values with no spaces.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142614</oid><category>advance</category><name>multicast.address</name><value>224.0.1.100</value><hint>multicast address for listening to the iPhone auto discovery</hint><validation>((25[0-5]|2[0-4]\d|1?\d?\d)\.){3}(25[0-5]|2[0-4]\d|1?\d?\d)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142619</oid><category>lagarto_network</category><name>lagarto_network.broadcast</name><value>tcp://127.0.0.1:5001</value><hint>Broadcast address and port used by all lagarto servers to publish network events (ZeroMQ pub/sub endpoint).</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142639</oid><category>advance</category><name>controller.applicationname</name><value>controller</value><hint>controller app name</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142630</oid><category>velbus</category><name>velbus.server.ports</name><value>6000</value><hint>Port of the Velbus &lt;&gt; TCP server. If multiple networks are needed then these should be entered as ‘;’ separated values with no spaces.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142645</oid><category>amx_ni</category><name>amx_ni.address</name><value>192.168.1.1</value><hint>Address of the AMX NI processor, mandatory.</hint><validation>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142632</oid><category>enocean</category><name>enocean.comPort</name><value>/dev/ttyUSB0</value><hint>Serial port the EnOcean interface is found on.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142633</oid><category>roundrobin</category><name>controller.roundrobin.tcpserver.port</name><value>20000</value><hint>Round robin tcpserver socket port of Controller</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142626</oid><category>roundrobin</category><name>controller.groupname</name><value>floor20</value><hint>This identifies which group this controller is in.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142624</oid><category>discovery</category><name>webapp.port</name><value>8688</value><hint>This is the port number the controller returns on a panel discovery request. It *must* match the port number configured on the hosting web container. If you change your web container port, change this port value to match or the panel auto-discovery will not work correctly. TODO: This is a duplicate configuration to the web container and should be consolidated. It should only be necessary to define the port number in one location. This may mean wrapping the web container with a proper service container.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142631</oid><category>macro</category><name>Macro.IR.Execution.Delay</name><value>500</value><hint>Macro execution delay. By default there's a delay between commands executed in a macro. Slow receiver devices (for example most TVs controlled via infrared) won't be able to process commands without significant delay. Mostly this is necessary for infrared. Other protocols may be able to process commands faster or without any delay at all. The measure is in milliseconds (500ms = 0.5s).</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142622</oid><category>z-wave</category><name>zwave.pad.port</name><value>7876</value><hint>If PAD is used for communication this defines the port the PAD daemon is listening on.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142635</oid><category>z-wave</category><name>zwave.comPort</name><value>/dev/ttyUSB0</value><hint>Serial port the Z-Wave stick is found on. Either local serial port or serial port on PAD host depending on commLayer setting.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142653</oid><category>vera</category><name>vera.address</name><value></value><hint>The IP address of your Vera box.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142634</oid><category>amx_ni</category><name>amx_ni.port</name><value>50000</value><hint>TCP port the AMX module is listening on, mandatory.</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142642</oid><category>samsungtv</category><name>samsungTV.address</name><value></value><hint>Address of the samsung TV to use.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142650</oid><category>roundrobin</category><name>controller.groupmember.autodetect.on</name><value>true</value><hint>Specify whether auto-detect group member function is turned on (true/false). If it's false, the controller will get the groupmembers from the key named "controller.groupmember.candidate.urls" of current configuration file. If it's true, controller will auto-detect its groupmembers with multicast.</hint><validation>.+</validation><options>true,false</options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142638</oid><category>infrared</category><name>irsend.path</name><value>/usr/local/bin/irsend</value><hint>The following properties are relevant if you are using infrared integration via Linux LIRC project. Otherwise ignore them. Path to LIRC irsend command. Configure this to match the location of your LIRC binary.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142627</oid><category>infrared</category><name>lircd.conf.path</name><value>/etc/lircd.conf</value><hint>Default path to lircd.conf (IR commands)</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142652</oid><category>marantz_avr</category><name>marantz_avr.address</name><value>192.168.1.1</value><hint>Address of the Marantz receiver, mandatory.</hint><validation>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142641</oid><category>enocean</category><name>enocean.serialProtocol</name><value>ESP3</value><hint>EnOcean serial protocol version supported by the EnOcean interface.</hint><validation>.+</validation><options>ESP2,ESP3</options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142637</oid><category>lutron_homeworks</category><name>lutron_homeworks.address</name><value>192.168.1.1</value><hint>Address of the Lutron HomeWorks processor, to be filled in only of autodiscovery is not desired.</hint><validation>(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142651</oid><category>rules</category><name>rules.editor</name><value>package org.openremote.controller.protocol;

import java.util.concurrent.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.io.*;
import org.openremote.controller.model.event.*;
import org.openremote.controller.utils.Logger;
import org.openremote.controller.Constants;

global org.openremote.controller.statuscache.CommandFacade execute;

function void log(String msg)
{
  Logger.getLogger(Constants.RUNTIME_EVENTPROCESSOR_LOG_CATEGORY + ".drools").debug(msg);
}

declare Event
  @role(event)
end

rule "-PSB: Init"
salience 10
then
  execute.command("VR1.ET", _ReadFromFile("VR1.ET","--:--"));
  execute.command("VR1.ET.inc", "OFF");
  execute.command("VR1.ET.dec", "OFF");
  execute.command("VETA.inc", "OFF");
  execute.command("VETA.dec", "OFF");
  execute.command("VETD.inc", "OFF");
  execute.command("VETD.dec", "OFF");
  execute.command("VR1.COMFORT",_ReadFromFile("VR1.COMFORT","20.0\u00B0"));
  execute.command("VR1.COMFORT.inc","OFF");
  execute.command("VR1.COMFORT.dec","OFF");
  execute.command("VR1.TEMPERATURE","19.5\u00B0");
  execute.command("VR1.TEMPERATURE.inc","OFF");
  execute.command("VR1.TEMPERATURE.dec","OFF");
  execute.command("VNEXTACTION",_ReadFromFile("VNEXTACTION","-")); // Earlier arrive with reset
  execute.command("VPERSONSENSETIME","-");
  execute.command("VLEAVES", "1.0"); 
  execute.command("VSCORE", "0");
  execute.command("VHEATINGSETPOINT", "16");
  execute.command("VWINDOW","Closed");
  execute.command("VADVICEDONE", "OFF");
  execute.command("VSUMMER", "No");
  execute.command("VADVICE", "You're doing great!");
  execute.command("VACATION.inc", "OFF");
  execute.command("VACATION.dec", "OFF");
  execute.command("VACATION", _ReadFromFile("VACATION", "0"));
  execute.command("VTOTALSCORE",_ReadFromFile("VTOTALSCORE", "0"));
  execute.command("VLEVEL", _ReadFromFile("VLEVEL", "0"));
  execute.command("VATA", _ReadFromFile("VATA","-"));
  execute.command("VATD", _ReadFromFile("VATD","-"));
  execute.command("VPRESENCE","No");
  execute.command("GVconfig",_ReadFromFile("GVconfig", "OpenRemote"));
  execute.command("GVtestsPassed",_ReadFromFile("GVtestsPassed", "0"));
  execute.command("GVtestsFailed",_ReadFromFile("GVtestsFailed", "0"));
  execute.command("VArrivalBackground", "on");
  execute.command("VDepartureBackground", "off");
end

rule "PSB: Init ETA when empty"
salience 9
when
  Event(source matches "VETA.*", $s: source, value=="")
then
  execute.command($s, _ReadFromFile($s, "09:00"));
end

rule "PSB: Init ETD when empty"
salience 8
when
  Event(source matches "VETD.*", $s: source, value=="")
then
  execute.command($s, _ReadFromFile($s, "17:00"));
end

function void _WriteToFile(String fn, Object o){
  String vl = o.toString();
  PrintWriter writer = new PrintWriter(fn+".txt", "UTF-8");
  writer.println(vl);
  writer.close();
}

function String _ReadFromFile(String fn, String dft){
  String result = dft;
  try{
    BufferedReader fr = new BufferedReader(new InputStreamReader(new FileInputStream(fn+".txt"), "UTF-8"));
    try{
      result = fr.readLine();
    } finally {
      fr.close();
    }
  } catch (IOException e) {
    // e.printStackTrace();
    log("File read error: "+fn);
  }
  return(result);
}

rule "--PSB: store values"
timer(int: 2s)
when
(
  Event($s:source matches "VET.*", $v:value!="", eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VACATION",  $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VTOTALSCORE", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VLEVEL", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VR1.COMFORT", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VATA", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VATD", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VNEXTACTION", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VR1.ET", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VETA", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source=="VETD", $v:value, eval(!_ReadFromFile($s,"").equals($v))) ||
  Event($s:source matches "^GV.*", $v:value, eval(!_ReadFromFile($s,"").equals($v)))
)
then                                                                                
  log($s+" old value: "+_ReadFromFile($s,"||")+"; new value:"+$v.toString());                                        
  _WriteToFile($s, $v);                                                             
end

function long _GetTime(Object o){
  String mt = o.toString();
  SimpleDateFormat sdf;
  if(mt.length()==8){
    sdf = new SimpleDateFormat("HH:mm:ss");
  }else if(mt.length()==5){
    sdf = new SimpleDateFormat("HH:mm");
  }else{
    return(0L);
  }
  Date date = null;
  date = sdf.parse(mt);
  return(date.getTime());
}

function boolean _TradingTimes(Object now, Object start, Object endt){
  long _now = _GetTime(now);
  long _start = _GetTime(start);
  long _end = _GetTime(endt);
  while(_start &lt; _now){ _start += 86400000L; }
  while(_end   &lt; _now){ _end += 86400000L; }
  return(_end &lt;= _start);
}

function String _SetTime(long t){
  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
  Date date = new Date(t);
  return(sdf.format(date));
}

function String _ShiftTime(Object o, int min){
  String mt = o.toString();
  SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
  Date date = null;
  if(mt.substring(0,1).equals("-")){
    date = new Date();
    date.setTime(date.getTime()+60*60000);
  }else{
    date = sdf.parse(mt);
    date.setTime(date.getTime()+min*60000);
  }
  return(sdf.format(date));
}

function Double _GetTemp(Object o){
  String s = o.toString();
  try{
    if(s.length()&gt;1){
      return(Double.parseDouble(s.substring(0, s.length()-1)));
    }else{
      return(0.0);
    }
  } catch (NumberFormatException e) {
    return(0.0);
  }
}

function String _ShiftTemp(Object o, double sh){
  String s = o.toString();
  try{
    Double t = Double.parseDouble(s.substring(0,s.length()-1)) + sh;
    return(String.format("%.1f\u00B0",t));
  } catch (NumberFormatException e) {
    return("0.0\u00B0");
  }
}

rule "-PSB: VR1.ET Inc"
  timer(int:300ms) // debounce &amp; protect double click
when
  Event(source == "VR1.ET", $v: value)
  Event(source == "VR1.ET.inc" , value == "ON")
then
  execute.command("VR1.ET", _ShiftTime($v.toString(), 5));
  execute.command("VR1.ET.inc", "off");
  execute.command("VR1.ET.dec", "OFF");
end

rule "-PSB: VETA Inc"
  timer(int:300ms) // debounce &amp; protect double click
when
  Event(source == "VETA", $v: value)
  Event(source == "VETA.inc" , value == "ON")
then
  execute.command("VETA", _ShiftTime($v.toString(), 5));
  execute.command("VETA.inc", "off");
  execute.command("VETA.dec", "OFF");
end

rule "-PSB: VETD Inc"
  timer(int:300ms) // debounce &amp; protect double click
when
  Event(source == "VETD", $v: value)
  Event(source == "VETD.inc" , value == "ON")
then
  execute.command("VETD", _ShiftTime($v.toString(), 5));
  execute.command("VETD.inc", "off");
  execute.command("VETD.dec", "OFF");
end

rule "-PSB: VR1.ET Dec"
  timer(int:300ms)
when
  Event(source == "VR1.ET", $v: value)
  Event(source == "VR1.ET.dec" , value == "ON")
then
  execute.command("VR1.ET", _ShiftTime($v.toString(), -15));
  execute.command("VR1.ET.inc", "OFF");
  execute.command("VR1.ET.dec", "off");
end

rule "-PSB: VETA Dec"
  timer(int:300ms)
when
  Event(source == "VETA", $v: value)
  Event(source == "VETA.dec" , value == "ON")
then
  execute.command("VETA", _ShiftTime($v.toString(), -15));
  execute.command("VETA.inc", "OFF");
  execute.command("VETA.dec", "off");
end

rule "-PSB: VETD Dec"
  timer(int:300ms)
when
  Event(source == "VETD", $v: value)
  Event(source == "VETD.dec" , value == "ON")
then
  execute.command("VETD", _ShiftTime($v.toString(), -15));
  execute.command("VETD.inc", "OFF");
  execute.command("VETD.dec", "off");
end

rule "PSB: set departure time on manual VR1.ET change"
  salience 10
  timer(int: 300ms)
when
  Event(source == "VR1.ET", $v: value)
(
  Event(source == "VR1.ET.inc" , value == "ON") ||
  Event(source == "VR1.ET.dec" , value == "ON") ||
  Event(source == "VETD.inc", value == "ON") ||
  Event(source == "VETD.dec", value == "ON")
)
  Event(source == "VNEXTACTION", value == "-")
then
  execute.command("VNEXTACTION", "Departure");
end

rule "-PSB: VR1.COMFORT inc"
  timer(int:300ms)
when
  Event(source == "VR1.COMFORT", $v: value, eval(_GetTemp(value) &lt; 30))
  Event(source == "VR1.COMFORT.inc" , value == "ON")
then
  execute.command("VR1.COMFORT.inc","off");
  execute.command("VR1.COMFORT.dec","OFF");
  execute.command("VR1.COMFORT", _ShiftTemp($v.toString(), 0.5));
end

rule "-PSB: VR1.COMFORT dec"
  timer(int:300ms)
when
  Event(source == "VR1.COMFORT", $v: value, eval(_GetTemp(value) &gt; 10))
  Event(source == "VR1.COMFORT.dec" , value == "ON")
then
  execute.command("VR1.COMFORT.inc","OFF");
  execute.command("VR1.COMFORT.dec","off");
  execute.command("VR1.COMFORT", _ShiftTemp($v.toString(), -0.5));
end

rule "-PSB: VR1.COMFORT INC/dec" // needed when change on the boundary
  salience -10
  timer(int:300ms)
when
  Event(source == "VR1.COMFORT.inc" , value == "ON")
then
  execute.command("VR1.COMFORT.inc","off");
  execute.command("VR1.COMFORT.dec","OFF");
end

rule "-PSB: VR1.COMFORT inc/DEC" // needed when change on the boundary
  salience -10
  timer(int:300ms)
when
  Event(source == "VR1.COMFORT.dec" , value == "ON")
then
  execute.command("VR1.COMFORT.inc","OFF");
  execute.command("VR1.COMFORT.dec","off");
end

rule "PSB: VR1.TEMPERATURE inc"
  timer(int:300ms)
when
  Event(source=="VSUMMER", value=="No")
  Event(source == "VR1.TEMPERATURE", $v: value, eval(_GetTemp(value) &lt;26))
  Event(source == "VR1.TEMPERATURE.inc" , value == "ON")
then
  execute.command("VR1.TEMPERATURE.inc","off");
  execute.command("VR1.TEMPERATURE.dec","OFF"); // Do not increase change counter
  execute.command("VR1.TEMPERATURE",   _ShiftTemp($v.toString(), 0.5));
end

rule "PSB: VR1.TEMPERATURE dec"
  timer(int:300ms)
when
  Event(source=="VSUMMER", value=="No")
  Event(source == "VR1.TEMPERATURE", $v: value, eval(_GetTemp(value) &gt; 16)) // Lower temp limit
  Event(source == "VR1.TEMPERATURE.dec" , value == "ON")
then
  execute.command("VR1.TEMPERATURE.inc","OFF");
  execute.command("VR1.TEMPERATURE.dec","off");
  execute.command("VR1.TEMPERATURE", _ShiftTemp($v.toString(), -0.5));
end

rule "PSB: VR1.TEMPERATURE INC/dec" // needed when on the boundary and in summer
  salience -10
  timer(int:300ms)
when
  Event(source == "VR1.TEMPERATURE.inc" , value == "ON")
then
  execute.command("VR1.TEMPERATURE.inc","off");
  execute.command("VR1.TEMPERATURE.dec","OFF");
end

rule "PSB: VR1.TEMPERATURE inc/DEC" // needed when on the boundary and in summer
  salience -10
  timer(int:300ms)
when
  Event(source == "VR1.TEMPERATURE.dec" , value == "ON")
then
  execute.command("VR1.TEMPERATURE.inc","OFF");
  execute.command("VR1.TEMPERATURE.dec","off");
end

rule "PSB: VR1.TEMPERATURE change summer"
salience 10
when
  Event(source=="VSUMMER", value=="Yes")
(
  Event(source == "VR1.TEMPERATURE.inc" , $s: source, value == "ON") ||
  Event(source == "VR1.TEMPERATURE.dec", $s: source, value == "ON")
)
then
  execute.command($s, "OFF");
end

rule "PSB: set departure on manual TEMPERATURE change after expected attendance"
salience 10
  timer(int:300ms)
when
  Event(source=="VSUMMER", value=="No")
  Event(source == "VR1.ET", $et: value)
(
  Event(source == "VR1.TEMPERATURE.inc" , value == "ON") ||
  Event(source == "VR1.TEMPERATURE.dec" , value == "ON")
)
  Event(source == "VNEXTACTION", value == "-")
then
  // Set departure time when temp manually adjusted after leave
  execute.command("VNEXTACTION", "Departure");
  execute.command("VR1.ET", _ShiftTime($et.toString(), 60));
  execute.command("VETD", _ShiftTime($et.toString(), 60));
end

rule "PSB: Move ETA to ET at midnight"
when
  Event(source=="TimerEEE", $e:value)
  Event(source=="TimerHH",$h:value,eval(_GetTime(value) &gt;= _GetTime("00:02"))) // Wait 2 minutes to be sure that $e is OK
  Event(source matches ("VETA."+$e), eval(_GetTime(value) &gt; _GetTime($h)), $va:value)
  Event(source matches ("VETD."+$e), $vd: value)
  Event(source=="VNEXTACTION", value=="-")
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0))
then
  execute.command("VR1.ET", $va.toString());
  execute.command("VETA", $va.toString());
  execute.command("VETD", $vd.toString());
  execute.command("VNEXTACTION", "Arrive");
end

rule "Move ETA ETD for current day"
when
  Event(source=="TimerEEE", $e:value)
  Event(source matches ("VETA."+$e), $va:value)
  Event(source matches ("VETD."+$e), $vd: value)
then
  execute.command("VETA", $va.toString());
  execute.command("VETD", $vd.toString());
end

rule "PSB: reset VATA"
when
  Event(source=="VNEXTACTION", value=="Arrive")
then
  execute.command("VATA","-");
end

rule "PSB: reset VATD"
when
  Event(source=="VATA",value=="-")
then
  execute.command("VATD","-");
end

rule "PSB: decrease vacation counter at midnight"
when
  $timer: Event(source=="TimerHH", eval(value.toString().substring(0,5).equals("00:00"))) // more reliable than timer(cron: )
  Event(source=="VACATION", $v: value, eval(Integer.parseInt(value.toString())&gt;0), this before $timer)
then
  execute.command("VACATION", Integer.parseInt($v.toString())-1);
end

rule "PSB: reset action at midnight"
when
  Event(source=="TimerHH", eval(value.toString().substring(0,5).equals("00:00"))) // more reliable than timer(cron: )
then
  execute.command("VR1.ET", "-");
  execute.command("VNEXTACTION", "-");
end

rule "PSB: Move ETD to ET at arrive init"
// This one is needed for cases when system is restart after arrive time
when
  Event(source=="TimerEEE",$e:value)
  Event(source=="TimerHH",$h:value)
  Event(source matches ("VETA."+$e), eval(_GetTime(value) &lt;= _GetTime($h)), eval(value.toString().length()==5))
  Event(source matches ("VETD."+$e), $vd:value, eval(value.toString().length()==5))
//  Event(source=="VNEXTACTION", value=="-")
  Event(source=="VR1.ET", value == "--:--")
then
   execute.command("VR1.ET", $vd.toString());
   execute.command("VETD", $vd.toString());
   execute.command("VNEXTACTION", "Departure");
end

rule "PSB: Move ETD to ET at arrive"
when
  Event(source=="TimerEEE",$e:value)
  Event(source=="TimerHH",$h:value)
  Event(source=="VNEXTACTION", value=="Arrive")
  Event(source matches ("VETD."+$e), $vd:value)
  Event(source=="VETA", value != "-", value != "--:--")
  Event(source=="VETA", eval(_GetTime(value) &lt; _GetTime($h)))
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0))
then
   execute.command("VR1.ET", $vd.toString());
   execute.command("VNEXTACTION", "Departure");
end

rule "PSB: actual arrival time earlier when temperature increased and person detected"
timer(int: 10s) // Prevent glitch at midnight reset
when
  // Before attendance schedule
  Event(source=="TimerHH",$h:value)
  Event(source=="VNEXTACTION", value=="Arrive")
  // Temperature increased manually (higher than ECO)
  Event(source=="VSUMMER", value=="No")
  Event(source=="VR1.COMFORT", $vc: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp(value) &gt; java.lang.Math.max(_GetTemp($vc)-5.0, 16.0)))
  // Person detected
  Event(source=="VPERSONSENSE", value == "1")
  Event(source=="VATA",value=="-")
then
  execute.command("VR1.ET", $h.toString().substring(0,5));
end

rule "-PSB: fetch actual arrival time"
when
  Event(source=="TimerHH", $h:value)
  Event(source=="VATA", value == "-")
  Event(source=="VNEXTACTION", value=="Departure")
  Event(source=="VPERSONSENSE", value=="1")
then
  execute.command("VATA", $h.toString().substring(0,5));
end

rule "PSB: fetch earlier actual arrival time up to 30 min v02"
when
  Event(source=="TimerHH", $h:value, eval(_GetTime(value) &gt;= _GetTime("04:30"))) // Earliest time of arrival is 4:30 AM
  Event(source=="VATA", value == "-")
  Event(source=="VNEXTACTION", value=="Arrive")
  Event(source=="VPERSONSENSE", value=="1")
  Event(source=="VETA", value != "-", value != "--:--")
  Event(source=="VETA", eval(_GetTime(_ShiftTime(value,-30)) &lt;= _GetTime($h)))
then
  execute.command("VATA", $h.toString().substring(0,5));
end

rule "PSB: Move - to ET at end of work"
timer(int: 1s) // avoid racing
when
  Event(source=="TimerHH",$h:value)
  Event(source=="VETD", value != "-", value != "--:--")
  Event(source=="VETD", eval(_GetTime(value) &lt; _GetTime($h)))
  Event(source=="VNEXTACTION", value=="Departure")
then
  execute.command("VR1.ET", "-");
  execute.command("VNEXTACTION", "-");
end

rule "PSB: Move - to ET on vacation"
when
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())&gt;0))
then
  execute.command("VR1.ET", "-");
  execute.command("VNEXTACTION", "-");
end

rule "PSB: fetch actual departure time"
when
  Event(source=="VATA", value != "-")
  Event(source=="VATD", value == "-")
  Event(source=="VNEXTACTION", value=="-")
  Event(source=="VPERSONSENSETIME", $v:value, eval(value.toString().length()&gt;4))
then
  execute.command("VATD", $v.toString().substring(0,5));
  execute.command("VPERSONSENSETIME","-");
end

rule "PSB: fetch later departure time"
when
  Event(source=="TimerEEE",$e:value)
  Event(source=="VNEXTACTION", value=="-")
  Event(source matches ("VETD."+$e), $vd:value)
  Event(source=="VATA", value != "-")
  Event(source=="VATD", value != "-")
  Event(source=="VPERSONSENSETIME", $v:value, eval(value.toString().length()&gt;4),
                                              eval(_GetTime(value)&lt;=_GetTime(_ShiftTime($vd,15))), // Till 15 min after scheduled departure
                                              eval(_GetTime(value)&lt;=_GetTime("23:55"))) 	      	 // Till 23:55 - does	not wrap on midnight
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0))
then
  execute.command("VATD", $v.toString().substring(0,5));
  execute.command("VPERSONSENSETIME","-");
end

rule "PSB: adjust estimated times at midnight"
when
  Event(source=="TimerEEE", $e: value)
  $timer: Event(source=="TimerHH", eval(value.toString().substring(0,5).equals("23:58"))) // more reliable than timer(cron: )
  Event(source matches ("VETD."+$e), $ved:value, this before $timer) // Loop cut
  Event(source matches ("VETA."+$e), $vea:value, this before $timer)
  Event(source=="VATD", $vd:value, value!="-")
  Event(source=="VATA", $va:value, value!="-")
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0))
then
  Double alpha = 2.0/(3+1); // 3 stays for 3 days exponential average
  long nt = (long) (alpha*_GetTime($va) + (1-alpha)*_GetTime($vea));
  execute.command("VETA."+$e.toString(), _SetTime(nt));
  log("EA="+$vea.toString()+" AA="+$va.toString()+" NA="+ _SetTime(nt));
  nt = (long) (alpha*_GetTime($vd) + (1-alpha)*_GetTime($ved));
  execute.command("VETD."+$e.toString(), _SetTime(nt));
  log("ED="+$ved.toString()+" AD="+$vd.toString()+" ND="+ _SetTime(nt));
end

rule "--PSB: move sense"
when
  Event($s:source=="FS.PIR", value=="on")
  Event(source=="TimerHH", $h:value)
then
  log("Move sense on "+$s);
  execute.command("VPERSONSENSETIME", $h.toString());
end

rule "-PSB: person sense"
when
  Event($s:source=="FS.PIR", value=="on")
  Event(source=="VPERSONSENSE", value!="1")
then
  execute.command("VPERSONSENSE", "1");
end

rule "-PSB: no person sense"
timer(int: 2s)
when
  Event(source=="FS.PIR", value!="on")
  Event(source=="VPERSONSENSE", value!="0")
then
  execute.command("VPERSONSENSE", "0");
end

rule "-PSB: window open sense"
when
  Event(source=="FS.Window", value=="on")
then
  execute.command("VWINDOW","Open");
end

rule "-PSB: window closed sense"
when
  Event(source=="FS.Window", value=="off")
then
  execute.command("VWINDOW","Closed");
end

rule "--FS outside temperature sense"
when
  Event(source=="FS.Toutside", $v: value)
then
  execute.command("VOUTSIDE", $v.toString() );
  log("Fake outside temperature: "+$v.toString() );
end

rule "--FS inside temperature sense"
when
  Event(source=="FS.Tinside", $v: value)
then
  log("Fake inside temperature: "+ $v.toString() );
  execute.command("VROOMTEMPERATURE", $v.toString() );
end

rule "-PSB: Presence"
when
  Event(source == "VPERSONSENSE", value == "1")
  Event(source=="VNEXTACTION", value=="Departure") // within expected attendance schedule
then
  execute.command("VPRESENCE","Yes");
end

rule "PSB: Absence when 30 min no movement"
timer(int: 30m)
when
  Event(source == "VPERSONSENSE", value == "0")
  Event(source=="VNEXTACTION", value=="Departure") // within expected attendance schedule
then
  execute.command("VPRESENCE","No");
end

rule "PSB: Absence  after 15 min v02"
timer(int: 15m)
when
  Event(source == "VPERSONSENSE", value == "0")
then
  execute.command("VPRESENCE","No");
end

rule "PSB: Absence after scheduled presence time"
when
  Event(source=="VNEXTACTION", value!="Departure") // outsidse expected attendance schedule
then
  execute.command("VPRESENCE","No");
end

rule "-PSB: heating ECO"
when
(
  Event(source=="VNEXTACTION", value!="Departure") || // outsidse expected attendance schedule
  Event(source=="VSUMMER", value=="Yes")
)
then
  execute.command("VHEATING","ECO");
end

rule "-PSB: heating Stand-by from ECO"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VNEXTACTION", value=="Departure") // within expected attendance schedule
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VHEATING", value == "ECO")
  Event(source=="VR1.COMFORT", $vc: value)
then
  execute.command("VR1.TEMPERATURE", $vc.toString());
  execute.command("VHEATING", "Stand-by");
end

rule "-PSB: heating Stand-by from ECO preheating 30 min v02"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VNEXTACTION", value=="Arrive") // within expected attendance schedule
  Event(source=="VHEATING", value == "ECO")
  Event(source=="VR1.COMFORT", $vc: value)
  
  Event(source=="TimerHH", $h:value, eval(_GetTime(value) &gt;= _GetTime("04:30"))) // Earliest time of arrival is 4:30 AM
  Event(source=="VETA", value != "-", value != "--:--")
  Event(source=="VETA", eval(_GetTime(_ShiftTime(value,-30)) &lt;= _GetTime($h)))
then
  execute.command("VR1.TEMPERATURE", $vc.toString());
  execute.command("VHEATING", "Stand-by");
end

rule "-PSB: heating Stand-by from Comfort"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VNEXTACTION", value=="Departure") // within expected attendance schedule
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VHEATING", value == "Comfort")
  Event(source=="VR1.COMFORT", $vc: value)
  Event(source=="VR1.TEMPERATURE", value==$vc) // Only when no manual temperature increase
then
  execute.command("VHEATING","Stand-by");
end

rule "-PSB: heating Comfort on presence"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VPRESENCE", value=="Yes")
  Event(source=="VR1.COMFORT", $v: value)
then
  execute.command("VHEATING","Comfort");
  execute.command("VR1.TEMPERATURE", $v.toString());
end

rule "-PSB: heating Comfort on temperature increase"
timer(int: 1s) // debounce
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VR1.COMFORT", $vc: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp(value) &gt; _GetTemp($vc)))
  Event(source=="VHEATING", value != "Comfort")
then
  execute.command("VHEATING","Comfort");
end

rule "-PSB: heating setpoint ECO"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATING", value=="ECO")
  Event(source=="VR1.COMFORT", $v: value)
then
  String s = $v.toString();
  Double t;
  try{
    t = java.lang.Math.max(16.0, Double.parseDouble(s.substring(0,s.length()-1))-5); // 5 degrees below comfort
  } catch (NumberFormatException e){
    t = 16.0;
  }
  execute.command("VHEATINGSETPOINT", String.format("%.1f",t));
  execute.command("VR1.TEMPERATURE", String.format("%.1f\u00B0",t));
end

rule "-PSB: heating setpoint ECO summer"
when
  Event(source=="VSUMMER", value=="Yes")
  Event(source=="VHEATING", value=="ECO")
  Event(source=="VR1.COMFORT", $v: value)
then
  String s = $v.toString();
  Double t = java.lang.Math.max(16.0, Double.parseDouble(s.substring(0,s.length()-1))-5); // 5 degrees below comfort
  execute.command("VHEATINGSETPOINT", String.format("%.1f",t));
  execute.command("VR1.TEMPERATURE", "-");
end

rule "-PSB: heating setpoint Stand-by"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATING", value=="Stand-by")
  Event(source=="VR1.COMFORT", $v: value)
  Event(source=="VR1.TEMPERATURE", value==$v) // When temperature changed manually keep it till ECO
then
  String s = $v.toString();
  Double t = java.lang.Math.max(16.0, Double.parseDouble(s.substring(0,s.length()-1))-1); // 1 degree below comfort
  execute.command("VHEATINGSETPOINT", String.format("%.1f",t));
  execute.command("VR1.TEMPERATURE", s);
end

rule "-PSB: heating setpoint Comfort"
timer(int: 1s) // avoid race between "VHEATING" &amp; "VR1.TEMPERATURE"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATING", value=="Comfort")
  Event(source=="VR1.TEMPERATURE", $v: value) // set by rule "PSB: heating Comfort" to VR1.COMFORT or manually
then
  String s = $v.toString();
  Double t = java.lang.Math.max(16.0, Double.parseDouble(s.substring(0,s.length()-1)));
  execute.command("VHEATINGSETPOINT", String.format("%.1f",t));
end

rule "-PSB: leaves 0"
when
  Event(source=="VLEAVES", value=="0.0")
then
  execute.command("VLEAF1", "l0.png");
  execute.command("VLEAF2", "l0.png");
  execute.command("VLEAF3", "l0.png");
end
  
rule "-PSB: leaves 0.5"
when
  Event(source=="VLEAVES", value=="0.5")
then
  execute.command("VLEAF1", "l1.png");
  execute.command("VLEAF2", "l0.png");
  execute.command("VLEAF3", "l0.png");
end
  
rule "-PSB: leaves 1"
when
  Event(source=="VLEAVES", value=="1.0")
then
  execute.command("VLEAF1", "l2.png");
  execute.command("VLEAF2", "l0.png");
  execute.command("VLEAF3", "l0.png");
end
  
rule "-PSB: leaves 1.5"
when
  Event(source=="VLEAVES", value=="1.5")
then
  execute.command("VLEAF1", "l2.png");
  execute.command("VLEAF2", "l1.png");
  execute.command("VLEAF3", "l0.png");
end
  
rule "-PSB: leaves 2"
when
  Event(source=="VLEAVES", value=="2.0")
then
  execute.command("VLEAF1", "l2.png");
  execute.command("VLEAF2", "l2.png");
  execute.command("VLEAF3", "l0.png");
end
  
rule "-PSB: leaves 2.5"
when
  Event(source=="VLEAVES", value=="2.5")
then
  execute.command("VLEAF1", "l2.png");
  execute.command("VLEAF2", "l2.png");
  execute.command("VLEAF3", "l1.png");
end
  
rule "-PSB: leaves 3"
when
  Event(source=="VLEAVES", value=="3.0")
then
  execute.command("VLEAF1", "l2.png");
  execute.command("VLEAF2", "l2.png");
  execute.command("VLEAF3", "l2.png");
end

rule "-PSB: energy efficiency 1"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 23)) // Comfort+
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="No")
then
  execute.command("VLEAVES", "0.0");
  execute.command("VSCORE", 0);
end

rule "-PSB: energy efficiency 2"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 23)) // Comfort+
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
  Event(source=="VWINDOW", value=="Open")
then
  execute.command("VLEAVES", "0.5");
  execute.command("VSCORE", 0);
end

// v02
rule "-PSB: energy efficiency 2-1 v02"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &lt; 23)) // Comfort, Comfort-, Comfort--
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VOUTSIDE", $t: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp($t) &lt; _GetTemp(value))) // Lower outside temperature
then
  execute.command("VLEAVES", "0.5");
  execute.command("VSCORE", 0);
end

rule "-PSB: energy efficiency 2-2 v02"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 23)) // Comfort+
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="No")
then
  execute.command("VLEAVES", "0.5");
  execute.command("VSCORE", 0);
end

rule "-PSB: energy efficiency 2-3 v02"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &lt; 23), eval(Double.parseDouble(value.toString()) &gt;= 18)) // Comfort, Comfort-, Comfort--, not eco
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="No")
then
  execute.command("VLEAVES", "1.0");
  execute.command("VSCORE", 0);
end
// v02
 
rule "-PSB: energy efficiency 3"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 21), eval(Double.parseDouble(value.toString()) &lt; 23)) // Comfort
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="No")
then
  execute.command("VLEAVES", "1.0");
  execute.command("VSCORE", 0);
end
 
rule "-PSB: energy efficiency 4"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open") // Added because otherwise it overrules efficiency 11
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 21), eval(Double.parseDouble(value.toString()) &lt; 23)) // Comfort
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
then
  execute.command("VLEAVES", "1.0");
  execute.command("VSCORE", 0);
end

rule "-PSB: energy efficiency 5"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATING", value=="Stand-by") 
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VWINDOW", value=="Open")
then
  execute.command("VLEAVES", "1.0");
  execute.command("VSCORE", 0);
end
 
rule "-PSB: energy efficiency 6"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 23)) // Comfort+
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
  Event(source=="VWINDOW", value=="Open")
then
  execute.command("VLEAVES", "1.0");
  execute.command("VSCORE", 0);
end
 
rule "-PSB: energy efficiency 7"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VHEATING", value=="Stand-by") 
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VOUTSIDE", $t: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp($t) &lt; _GetTemp(value))) // Lower outside temperature
then
  execute.command("VLEAVES", "1.5");
  execute.command("VSCORE", 1);
end
 
rule "-PSB: energy efficiency 8"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VHEATING", value=="ECO") 
  Event(source=="VPRESENCE", value=="No")
  Event(source=="VOUTSIDE", $t: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp($t) &lt; _GetTemp(value))) // Lower outside temperature
then
  execute.command("VLEAVES", "1.5");
  execute.command("VSCORE", 1);
end
 
rule "-PSB: energy efficiency 9"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 23)) // Comfort+
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
then
  execute.command("VLEAVES", "1.5");
  execute.command("VSCORE", 1);
end
 
rule "-PSB: energy efficiency 10"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 20), eval(Double.parseDouble(value.toString()) &lt; 21)) // Comfort-
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
  Event(source=="VOUTSIDE", $t: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp($t) &lt; _GetTemp(value))) // Lower outside temperature
then
  execute.command("VLEAVES", "1.5");
  execute.command("VSCORE", 1);
end
 
rule "-PSB: energy efficiency 11"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 21), eval(Double.parseDouble(value.toString()) &lt; 23)) // Comfort
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
then
  execute.command("VLEAVES", "2.0");
  execute.command("VSCORE", 2);
end
 
rule "-PSB: energy efficiency 12 v02"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &gt;= 20), eval(Double.parseDouble(value.toString()) &lt; 21)) // Comfort-
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes") // v02
then
  execute.command("VLEAVES", "2.5");
  execute.command("VSCORE", 3);
end
 
rule "-PSB: energy efficiency 13"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &lt; 20)) // Comfort--
  Event(source=="VHEATING", value!="ECO")  // needed because of race
  Event(source=="VPRESENCE", value=="Yes")
  Event(source=="VOUTSIDE", $t: value)
  Event(source=="VR1.TEMPERATURE", eval(_GetTemp($t) &gt;= _GetTemp(value))) // Higher outside temperature
then
  execute.command("VLEAVES", "3.0");
  execute.command("VSCORE", 4);
end

rule "-PSB: energy efficiency 14"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATING", value=="ECO") 
  Event(source=="VPRESENCE", value=="No")
then
  execute.command("VLEAVES", "3.0");
  execute.command("VSCORE", 4);
end

rule "-PSB: energy efficiency 15"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VWINDOW", value=="Closed")
  Event(source=="VHEATINGSETPOINT", eval(Double.parseDouble(value.toString()) &lt; 20)) // Comfort--
  Event(source=="VPRESENCE", value=="Yes") // No important IMHO
then
  execute.command("VLEAVES", "3.0");
  execute.command("VSCORE", 4);
end

rule "-PSB: energy efficiency Summer"
when
  Event(source=="VSUMMER", value=="Yes")
then
  execute.command("VLEAVES", "3.0");
  execute.command("VSCORE", 4);
end

rule "--PSB: increase total score every 15m"
when
  $timer: Event(source=="TimerHH", eval(Integer.parseInt(value.toString().substring(3,5)) % 15 == 0)) // more reliable than timer(cron: )
  Event(source=="VSCORE", $s: value)
  Event(source=="VTOTALSCORE", $ts: value, this before $timer)
then
  execute.command("VTOTALSCORE", Integer.parseInt($ts.toString())+Integer.parseInt($s.toString()));
end

rule "PSB: reward"
when
  $ts: Event(source=="VTOTALSCORE", $s: value, eval(Integer.parseInt(value.toString()) &gt;= 1000))
  Event(source=="VLEVEL", $l: value, this before $ts)
then
  Integer i = Integer.parseInt($s.toString());
  execute.command("VTOTALSCORE", i-1000); // Reset score
  execute.command("VLEVEL", Integer.parseInt($l.toString())+1);
end

rule "--PSB: display totalscore"
when
  Event(source=="VTOTALSCORE", $ts: value)
then
   execute.command("VTOTALSCOREdisp", $ts+" / 1000");
end

rule "PSB: summer"
timer(int: 1h)
when
  Event(source=="VR1.COMFORT", $sp: value)
  Event(source=="VOUTSIDE", value!="", eval(_GetTemp($sp) &lt;= _GetTemp(value) )) // Outside temp higher than set point
  Event(source=="VOUTSIDE", $o:value) // Only for logging
  Event(source=="VSUMMER", value!="Yes")
then
  log("Summer is ON; outside="+$o.toString());
  execute.command("VSUMMER", "Yes");
end

rule "PSB: no summer"
timer(int: 1h)
when
  Event(source=="VR1.COMFORT", $sp: value)
  Event(source=="VOUTSIDE", value!="", eval(_GetTemp($sp) &gt; _GetTemp(value) )) // Outside temp lower than set point
  Event(source=="VOUTSIDE", $o:value) // Only for logging
  Event(source=="VSUMMER", value!="No")
then
  log("Summer is OFF; outside="+$o.toString());
  execute.command("VSUMMER", "No");
end

rule "-PSB: advice 1"
when
  Event(source=="VWINDOW", value=="Open")
  Event(source=="VSUMMER", value=="No")
  Event(source=="VHEATINGSETPOINT", $sp: value)
  Event(source=="VOUTSIDE", value!="", eval(Double.parseDouble($sp.toString()) &gt; _GetTemp(value) )) // Outside temp lower than set point
then
  execute.command("VADVICE", "It's more energy efficient to close the windows when it is colder outside than it is inside");
  execute.command("VADVICEDONE", "OFF");
  insert(new AdviceGiven("It's more energy efficient to close the windows when it is colder outside than it is inside"));
end

rule "-PSB: advice 1 done"
when
  Event(source=="VHEATINGSETPOINT", $sp: value)
(
  Event(source=="VWINDOW", value=="Closed") ||
  Event(source=="VOUTSIDE", value!="", eval(Double.parseDouble($sp.toString()) &lt;= _GetTemp(value) )) // Outside temp lower than set point
)
  Event(source=="VADVICE",eval(value.toString().substring(0,9).equals("It's more")))
then
  execute.command("VADVICE", "You're doing great!");
  execute.command("VADVICEDONE", "OFF");
end

rule "-PSB: advice 2"
when
  Event(source=="VSUMMER", value=="No")
  Event(source=="VR1.COMFORT", eval(_GetTemp(value) &gt; 20.5)) // Average is 20 hardcoded or from sensor?
then
  execute.command("VADVICE", "Your comfort temperature is set higher than average. You can adjust it on the settings page.");
  execute.command("VADVICEDONE", "OFF");
  insert(new AdviceGiven("Your comfort temperature is set higher than average. You can adjust it on the settings page."));
end

rule "-PSB: advice 2 done"
when
  Event(source=="VR1.COMFORT", eval(_GetTemp(value) &lt;= 20.5)) // Average is 20 hardcoded or from sensor?
  Event(source=="VADVICE",eval(value.toString().substring(0,12).equals("Your comfort")))
then
  execute.command("VADVICE", "You're doing great!");
  execute.command("VADVICEDONE", "OFF");
end

rule "-PSB: advice 3"
when
// irregular attendence
then
  execute.command("VADVICEDONE", "OFF");
end
 
rule "-PSB: advice 4"
when
(
  Event(source=="VADVICEDONE", value=="ON") ||
  Event(source=="VSUMMER", value=="Yes")
)
then
  execute.command("VADVICE", "You're doing great!");
  execute.command("VADVICEDONE", "OFF");
  insert(new AdviceGiven("You're doing great!"));
end

declare AdviceGiven
  @role(event)
  @expires(10m)
  advice : String
end

rule "-PSB: vacation inc"
  timer(int:300ms)
when
  Event(source=="VACATION", $v: value)
  Event(source=="VACATION.inc", value=="ON")
then
  execute.command("VACATION", Integer.parseInt($v.toString())+1);
  execute.command("VACATION.inc", "OFF");
end

rule "-PSB: vacation dec"
  timer(int:300ms)
when
  Event(source=="VACATION", $v: value, eval(Integer.parseInt(value.toString()) &gt; 0))
  Event(source=="VACATION.dec", value=="ON")
then
  execute.command("VACATION", Integer.parseInt($v.toString())-1);
  execute.command("VACATION.dec", "OFF");
end

rule "-PSB: vacation inc/dec" // needed so the ON value does not hang
  salience -10
  timer(int:300ms)
when
  Event(source matches "VACATION...c", $s: source, value=="ON")
then
  execute.command($s, "OFF");
end

// New StrijpS 2016

rule "-PSB16: Full Timer"
when
  Event(source=="TimerEEEE", $EEEE:value)
  Event(source=="Timerd", $d: value)
  Event(source=="TimerMMM", $MMM:value)
then
  execute.command("VTimer", $EEEE.toString()+" "+$d.toString()+" "+$MMM.toString()+". I will be:");
end

rule "-PSB16: background arrival on"
when
  Event(source=="TimerHH", $h:value)
  Event(source=="VETA", eval(_GetTime(value) &gt; _GetTime($h)) )
  Event(source=="VArrivalBackground", value!="on")
then
  execute.command("VArrivalBackground", "on");
end

rule "-PSB16: background departure on"
when
  Event(source=="TimerHH", $h:value)
  Event(source=="VETD", eval(_GetTime(value) &gt; _GetTime($h)) )
  Event(source=="VDepartureBackground", value!="on")
then
  execute.command("VDepartureBackground", "on");
end

rule "-PSB16: background arrival off"
when
  Event(source=="TimerHH", $h:value)
  Event(source=="VETA", eval(_GetTime(value) &lt;= _GetTime($h)) )
  Event(source=="VArrivalBackground", value!="off")
then
  execute.command("VArrivalBackground", "off");
end

rule "-PSB16: background departure off"
when
  Event(source=="TimerHH", $h:value)
  Event(source=="VETD", eval(_GetTime(value) &lt;= _GetTime($h)) )
  Event(source=="VDepartureBackground", value!="off")
then
  execute.command("VDepartureBackground", "off");
end

// PID controller start

rule "-PID: init"
then
  execute.command("GV.PID.Kp",_ReadFromFile("GV.PID.Kp", "0.6"));
  execute.command("GV.PID.Ki",_ReadFromFile("GV.PID.Ki", "0.2"));
  execute.command("GV.PID.Kd",_ReadFromFile("GV.PID.Kd", "0.1"));
  execute.command("GV.PID.Db",_ReadFromFile("GV.PID.Db", "0.0"));
  execute.command("GV.PID.Sp",_ReadFromFile("GV.PID.Sp", "1.0"));
end

// PID UI

rule "-PID: increase Kp"
  timer(int:300ms)
when
  Event(source=="GV.PID.Kp", $v: value)
  Event($s:source=="PID.kp.inc", value=="ON")
then
  execute.command("GV.PID.Kp", String.format("%.1f", Double.parseDouble($v.toString())+0.1) );
  execute.command($s, "off");
end

rule "-PID: decrease Kp"
  timer(int:300ms)
when
  Event(source=="GV.PID.Kp", $v: value)
  Event($s:source=="PID.kp.dec", value=="ON")
then
  execute.command("GV.PID.Kp", String.format("%.1f", Double.parseDouble($v.toString())-0.1) );
  execute.command($s, "off");
end

rule "-PID: increase Ki"
  timer(int:300ms)
when
  Event(source=="GV.PID.Ki", $v: value)
  Event($s:source=="PID.ki.inc", value=="ON")
then
  execute.command("GV.PID.Ki", String.format("%.1f", Double.parseDouble($v.toString())+0.1) );
  execute.command($s, "off");
end

rule "-PID: decrease Ki"
  timer(int:300ms)
when
  Event(source=="GV.PID.Ki", $v: value)
  Event($s:source=="PID.ki.dec", value=="ON")
then
  execute.command("GV.PID.Ki", String.format("%.1f", Double.parseDouble($v.toString())-0.1) );
  execute.command($s, "off");
end

rule "-PID: increase Kd"
  timer(int:300ms)
when
  Event(source=="GV.PID.Kd", $v: value)
  Event($s:source=="PID.kd.inc", value=="ON")
then
  execute.command("GV.PID.Kd", String.format("%.1f", Double.parseDouble($v.toString())+0.1) );
  execute.command($s, "off");
end

rule "-PID: decrease Kd"
  timer(int:300ms)
when
  Event(source=="GV.PID.Kd", $v: value)
  Event($s:source=="PID.kd.dec", value=="ON")
then
  execute.command("GV.PID.Kd", String.format("%.1f", Double.parseDouble($v.toString())-0.1) );
  execute.command($s, "off");
end

rule "-PID: increase Db"
  timer(int:300ms)
when
  Event(source=="GV.PID.Db", $v: value)
  Event($s:source=="PID.db.inc", value=="ON")
then
  execute.command("GV.PID.Db", String.format("%.1f", Double.parseDouble($v.toString())+0.1) );
  execute.command($s, "off");
end

rule "-PID: decrease Db"
  timer(int:300ms)
when
  Event(source=="GV.PID.Db", $v: value)
  Event($s:source=="PID.db.dec", value=="ON")
then
  execute.command("GV.PID.Db", String.format("%.1f", Double.parseDouble($v.toString())-0.1) );
  execute.command($s, "off");
end

rule "-PID: increase Sp"
  timer(int:300ms)
when
  Event(source=="GV.PID.Sp", $v: value)
  Event($s:source=="PID.sp.inc", value=="ON")
then
  execute.command("GV.PID.Sp", String.format("%.1f", Double.parseDouble($v.toString())+0.5) );
  execute.command($s, "off");
end

rule "-PID: decrease Sp"
  timer(int:300ms)
when
  Event(source=="GV.PID.Sp", $v: value)
  Event($s:source=="PID.sp.dec", value=="ON")
then
  execute.command("GV.PID.Sp", String.format("%.1f", Double.parseDouble($v.toString())-0.5) );
  execute.command($s, "off");
end

rule "-PID: reset inc/dec"
  salience -10
  timer(int: 1s)
when
  Event($s: source matches "^PID......c$", value!="off")
then
  execute.command($s, "off");
end

// PID algorithm

declare PIDVars
// Input==Output;
  output: double
  iterm: double
  prevInput: double
  outMin: double
  outMax: double
  active: Boolean
end

rule "PID: algo init"
then
  PIDVars pv = new PIDVars();
  pv.setActive(true);
  pv.setOutMax(100);
  pv.setOutMin(-100);
  insert(pv);
end

rule "--PID: compute"
  timer(int: 0 1s)
when
  $pv: PIDVars(active==true)
  Event(source=="GV.PID.Kp", $kp: value)
  Event(source=="GV.PID.Ki", $ki: value)
  Event(source=="GV.PID.Kd", $kd: value)
  Event(source=="GV.PID.Sp", $sp: value)
  Event(source=="GV.PID.Db", $db: value)
then
  double error = Double.parseDouble($sp.toString() ) - $pv.getOutput();
  double kp = Double.parseDouble($kp.toString());
  double ki = Double.parseDouble($ki.toString()); // * sample time in sec
  double kd = Double.parseDouble($kd.toString()); // / sample time in sec
  double sp = Double.parseDouble($sp.toString());
  double db = Double.parseDouble($db.toString());

  double iterm = $pv.getIterm() + (ki * error); 
  if(iterm &gt; $pv.getOutMax() ) iterm = $pv.getOutMax();
  else if(iterm &lt; $pv.getOutMin() ) iterm = $pv.getOutMin();
  $pv.setIterm( iterm );

  //double dInput = (Input - lastInput);
  double dInput = ($pv.getOutput() - $pv.getPrevInput() );
  $pv.setPrevInput($pv.getOutput());
 
  // Compute PID Output
  double output = kp * error + $pv.getIterm()- kd * dInput;
  if(output &gt; $pv.getOutMax()) output = $pv.getOutMax();
  else if(output &lt; $pv.getOutMin()) output = $pv.getOutMin();
  $pv.setOutput(output);

  execute.command("PID.Se", String.format("%.4f",  error) );
  execute.command("PID.Output", String.format("%.4f", output) );
//  log($pv.toString() + " error: "+String.format("%f", Double.parseDouble($sp.toString() ) - $pv.getOutput()));
end

// PID end

// Fake sensors start

rule "Fake sensors init"
then
  execute.command("FS.Toutside", "15\u00B0");
  execute.command("FS.Tinside", "19.5\u00B0");
  execute.command("FS.PIR.(OFF)", "off");
  execute.command("FS.Window.(OFF)", "off");
end

rule "--Fake sensors Toutside inc"
  timer(int:300ms)
when
  Event(source == "FS.Toutside", $v: value, eval(_GetTemp(value) &lt; 50))
  Event(source == "FS.Toutside.inc" , value == "on")
then
  execute.command("FS.Toutside.inc","off");
  execute.command("FS.Toutside", _ShiftTemp($v.toString(), 0.1));
end

rule "--Fake sensors Toutside dec"
  timer(int:300ms)
when
  Event(source == "FS.Toutside", $v: value, eval(_GetTemp(value) &gt; -40))
  Event(source == "FS.Toutside.dec" , value == "on")
then
  execute.command("FS.Toutside.dec","off");
  execute.command("FS.Toutside", _ShiftTemp($v.toString(), -0.1));
end

rule "--Fake sensors Tinside inc"
  timer(int:300ms)
when
  Event(source == "FS.Tinside", $v: value, eval(_GetTemp(value) &lt; 40))
  Event(source == "FS.Tinside.inc" , value == "on")
then
  execute.command("FS.Tinside.inc","off");
  execute.command("FS.Tinside", _ShiftTemp($v.toString(), 0.1));
end

rule "--Fake sensors Tinside dec"
  timer(int:300ms)
when
  Event(source == "FS.Tinside", $v: value, eval(_GetTemp(value) &gt; 0))
  Event(source == "FS.Tinside.dec" , value == "on")
then
  execute.command("FS.Tinside.dec","off");
  execute.command("FS.Tinside", _ShiftTemp($v.toString(), -0.1));
end

rule "--Fake sensors PIR off"
  timer(int: 2s)
when
  Event(source=="FS.PIR", value=="on")
then
  execute.command("FS.PIR.(OFF)", "off");
end

// Fake sensors end

// blok61 for demo start

// Light

rule "--B61: only one light scene 1"
when
  Event(source=="Light.Scene2", value=="on")||
  Event(source=="Light.Scene3", value=="on")||
  Event(source=="Light.Scene4", value=="on")
then
  execute.command("Light.Scene1.(OFF)", "off");
end

rule "--B61: only one light scene 2"
when
  Event(source=="Light.Scene1", value=="on")||
  Event(source=="Light.Scene3", value=="on")||
  Event(source=="Light.Scene4", value=="on")
then
  execute.command("Light.Scene2.(OFF)", "off");
end

rule "--B61: only one light scene 3"
when
  Event(source=="Light.Scene1", value=="on")||
  Event(source=="Light.Scene2", value=="on")||
  Event(source=="Light.Scene4", value=="on")
then
  execute.command("Light.Scene3.(OFF)", "off");
end

rule "--B61: only one light scene 4"
when
  Event(source=="Light.Scene1", value=="on")||
  Event(source=="Light.Scene2", value=="on")||
  Event(source=="Light.Scene3", value=="on")
then
  execute.command("Light.Scene4.(OFF)", "off");
end

rule "-B61: only one light scene init"
timer(int: 2s)
when
  Event(source=="Light.Scene1", value=="off")
  Event(source=="Light.Scene2", value=="off")
  Event(source=="Light.Scene3", value=="off")
  Event(source=="Light.Scene4", value=="off")
then
  execute.command("Light.Scene1.(ON)", "on");
end

rule "-B61: smart light morning"
timer(int: 1s)
when
  $ls: Event(source=="Light.Smart", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $a, $d))
  Event(source=="Light.Scene1", value=="off")
then
  execute.command("Light.Scene1.(ON)", "on");
end

rule "-P61: smart light night"
timer(int: 1s)
when
  $ls: Event(source=="Light.Smart", value=="on")
  Event(source=="VETA", $a: value)
  Event(source=="VETD", $d: value)
  Event(source=="TimerHH", _TradingTimes(value, $d, $a))
  Event(source=="Light.Scene4", value=="off")
then
  execute.command("Light.Scene4.(ON)");
end

/*
// Problematic rule with race conditions. Better to switch it off always manually because lights can be turned on also by smart, which in turn will turn off smart. Ugly.
rule "-B61: turn smart light off on manual entry"
when
(
  $e:Event(source=="Light.Scene1", value=="on")||
  $e:Event(source=="Light.Scene2", value=="on")||
  $e:Event(source=="Light.Scene3", value=="on")||
  $e:Event(source=="Light.Scene4", value=="on")
)
  Event(source=="Light.Smart", value=="on", this before $e) // Switches off on itself, but it will always switch on light 
then
  execute.command("Light.Smart.(OFF)", "off");
end
*/

rule "-P61: vacation evening lights on"
when
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())&gt;0) )
  Event(source=="VETA", $a: value)
  Event(source=="VETD", $d: value)
  Event(source=="TimerHH", _TradingTimes(value, $d, $a))
  Event(source=="Light.Scene4", value=="off")
then
  execute.command("Light.Scene4.(ON)");
end

rule "-P61: vacation evening lights off"
when
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())&gt;0) )
  Event(source=="VETA", $a: value)
  Event(source=="VETD", $d: value)
  Event(source=="TimerHH", _TradingTimes(value, $a, $d))
  Event(source=="Light.Scene4", value=="on")
then
  execute.command("Light.Scene4.(OFF)");
end

// Start

rule "-P61: smart times on"
when
  Event(source=="Smart.Start", value=="on")
  Event(source=="VETA", $v: value)
then
  execute.command("Smart.Start.Time", $v.toString() );
end

rule "-P61: smart times off"
when
  Event(source=="Smart.Start", value!="on")
  Event(source=="VETA", $v: value)
then
  execute.command("Smart.Start.Time", " " );
end

// Safety

rule "-P61: alarm off"
when
  Event(source=="Safety.Alarm", value=="off")
then
  execute.command("Safety.Alarm.Image", "off");
end

rule "-P61: alarm on"
when
  Event(source=="Safety.Alarm", value=="on")
(
  Event(source=="FS.PIR", value=="on")||
  Event(source=="FS.Window", value=="on")
)
then
  execute.command("Safety.Alarm.Image", "on");
end

rule "-P61: smart alarm off"
when
  Event(source=="Safety.Smart", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $a, $d))
  Event(source=="Safety.Alarm", value=="on")
then
  execute.command("Safety.Alarm.(OFF)");
end

rule "-P61: smart alarm on"
when
  Event(source=="Safety.Smart", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $d, $a))
  Event(source=="Safety.Alarm", value=="off")
then
  execute.command("Safety.Alarm.(ON)");
end

rule "--P61: vacation alarm on"
timer(cron: 0 * * * * ?)
when
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())&gt;0) )
then
  execute.command("Safety.Alarm.(ON)");
end

// Climate

rule "-P61: climate temp init"
then
  execute.command("Climate.Day.Temp", "20.5\u00B0");
  execute.command("Climate.Night.Temp", "16.5\u00B0");
end

rule "-P61: climate smart vent on morning"
when
  Event(source=="Climate.Vent", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $a, $d))
then
  execute.command("Climate.Vent.State", "low");
end

rule "-P61: climate smart vent on night"
when
  Event(source=="Climate.Vent", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $d, $a))
then
  execute.command("Climate.Vent.State", "off");
end

rule "-P61: climate smart vent off"
when
  Event(source=="Climate.Vent", value=="off")
then
  execute.command("Climate.Vent.State", " ");
end

rule "-P61: smart climate day on"
when
  Event(source=="Climate.Smart", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $a, $d))
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0) )
then
  execute.command("Climate.Day.(ON)"); 
end

rule "-P61: smart climate night on"
when
  Event(source=="Climate.Smart", value=="on")
  Event(source=="VETA", $a:value)
  Event(source=="VETD", $d:value)
  Event(source=="TimerHH", _TradingTimes(value, $d, $a))
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0) )
then
  execute.command("Climate.Night.(ON)"); 
end

rule "--P61: climate day on"
//timer(cron: 1/2 * * * * ?)
when
  Event(source=="Climate.Day", value=="on")
  Event(source=="Climate.Day.Temp", $v: value)
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0) )
then
  execute.command("Climate.Night.(OFF)"); 
  execute.command("VR1.COMFORT", $v.toString() ); 
end

rule "--P61: climate night on"
//timer(cron: 0/2 * * * * ?)
when
  Event(source=="Climate.Night", value=="on")
  Event(source=="Climate.Night.Temp", $v: value)
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())==0) )
then
  execute.command("Climate.Day.(OFF)"); 
  execute.command("VR1.COMFORT", $v.toString() );  
end

rule "-P61: smart climate off on manual comfort change"
salience 10
when
  Event(source == "VR1.COMFORT.inc" , value == "ON")||
  Event(source == "VR1.COMFORT.dec" , value == "ON")
then
  execute.command("Climate.Smart.(OFF)");
end

rule "-P61: temp day manual change"
when
  $c: Event(source=="VR1.COMFORT" , $v: value)
  Event(source=="Climate.Day.Temp", value != $v, this before $c) // comfort changed manually
  Event(source=="Climate.Smart", value=="off", this before $c)
  Event(source=="Climate.Day", value=="on", this before $c)
  Event(source=="Climate.Night", value=="off", this before $c)
then
   execute.command("Climate.Day.Temp", $v.toString() ); 
end

rule "-P61: temp night manual change"
when
  $c: Event(source=="VR1.COMFORT" , $v: value)
  Event(source=="Climate.Night.Temp", value != $v, this before $c) // comfort changed manually
  Event(source=="Climate.Smart", value=="off", this before $c)
  Event(source=="Climate.Night", value=="on", this before $c)
  Event(source=="Climate.Day", value=="off", this before $c)
then
   execute.command("Climate.Night.Temp", $v.toString() ); 
end

rule "--P61: vacation temperature low"
timer(cron: 10 * * * * ?)
when
  Event(source=="VACATION", eval(Integer.parseInt(value.toString())&gt;0) )
then
  execute.command("Climate.Night.(OFF)"); 
  execute.command("Climate.Day.(OFF)"); 
  execute.command("VR1.COMFORT", "10.0\u00B0");
end

// Menu

rule "-P61: turn all smart menus on"
when
  Event(source=="Menu.Smart", value=="on")
then
  execute.command("Light.Smart.(ON)");
  execute.command("Smart.Start.(ON)");
  execute.command("Safety.Smart.(ON)");
  execute.command("Climate.Smart.(ON)");
  execute.command("Climate.Vent.(ON)");
end

rule "-P61: turn all smart menus switch off"
timer(int: 1s)
when
  Event(source=="Menu.Smart", value=="on")
(
  Event(source=="Light.Smart", value!="on")||
  Event(source=="Smart.Start", value!="on")||
  Event(source=="Safety.Smart", value!="on")||
  Event(source=="Climate.Smart", value!="on")||
  Event(source=="Climate.Vent", value!="on")
)
then
  execute.command("Menu.Smart.(OFF)");
end

rule "-P61: turn smart menus switch on"
when
  Event(source=="Light.Smart", value=="on")
  Event(source=="Smart.Start", value=="on")
  Event(source=="Safety.Smart", value=="on")
  Event(source=="Climate.Smart", value=="on")
  Event(source=="Climate.Vent", value=="on")
then
  execute.command("Menu.Smart.(ON)");
end

// menu end

// blok61 for demo end</value><hint>Content for the modeler_rules.drl file. This has to be a valid Drools .drl file syntax.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142647</oid><category>lutron_homeworks</category><name>lutron_homeworks.username</name><value>openremote</value><hint>User name used for connection to Lutron HomeWorks processor, as defined on Link 9 in HomeWorks configuration.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142629</oid><category>vera</category><name>protocol.vera.classname</name><value>org.openremote.controller.protocol.vera.VeraCommandBuilder</value><hint>Vera CommandBuilder class. This entry should not be changed.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142649</oid><category>lutron_homeworks</category><name>lutron_homeworks.port</name><value>23</value><hint>Telnet port of the Lutron HomeWorks processor, to be filled in only of autodiscovery is not desired.</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142640</oid><category>samsungtv</category><name>protocol.samsungTV.classname</name><value>org.openremote.controller.protocol.samsungtv.SamsungTVRemoteCommandBuilder</value><hint>Samsung TV CommandBuilder class. This entry should not be changed.</hint><validation>.+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO><org.openremote.modeler.shared.dto.ControllerConfigDTO><oid>142643</oid><category>roundrobin</category><name>controller.roundrobin.multicast.port</name><value>10000</value><hint>Multicast port for roundrobin NOTE: This option is useful only on the situation of "controller.roundrobin.on" is true.</hint><validation>\d+</validation><options></options></org.openremote.modeler.shared.dto.ControllerConfigDTO></set></entry><entry><string>devices</string><list><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35478</oid><name>Times</name><vendor>na</vendor><model>na</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732683</oid><name>VETA.Tue</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetatuesday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732684</oid><name>VATD</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VATD</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732685</oid><name>VNEXTACTION</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VNEXTACTION</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732686</oid><name>Timerd</name><protocolType>DateTime Protocol</protocolType><protocolAttributes><entry><string>timezone</string><string>Europe/Amsterdam</string></entry><entry><string>command</string><string>date</string></entry><entry><string>pollingInterval</string><string>1m</string></entry><entry><string>format</string><string>d</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732687</oid><name>VPRESENCE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VPRESENCE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732688</oid><name>VETA.Thu</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetathursday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732689</oid><name>VTimer</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VTimer</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732690</oid><name>VETA.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetaalldec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732691</oid><name>VETA.Mon</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetamonday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732692</oid><name>VETD.Fri</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdfriday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732693</oid><name>VR1.ET.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vretdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732694</oid><name>VETA.Sat</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetasat</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732695</oid><name>VETD.Sun</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdsun</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732696</oid><name>VETD.Thu</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdthursday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732697</oid><name>VETD.Tue</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdtuesday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732698</oid><name>VACATION.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VABSENTinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732699</oid><name>TimerEEEE</name><protocolType>DateTime Protocol</protocolType><protocolAttributes><entry><string>timezone</string><string>Europe/Amsterdam</string></entry><entry><string>command</string><string>date</string></entry><entry><string>pollingInterval</string><string>1m</string></entry><entry><string>format</string><string>EEEE</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732700</oid><name>VETD.Sat</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdsat</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732701</oid><name>VACATION.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VABSENTdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732702</oid><name>VPERSONSENSE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VPERSONSENSE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732703</oid><name>VETD.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdalldec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732704</oid><name>VETD.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdallinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732705</oid><name>VETD.Wed</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdwendsday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732706</oid><name>VETA.Wed</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetawendsday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732707</oid><name>VArrivalBackground</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VArrivalBackground</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732708</oid><name>VR1.ET</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vret</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732709</oid><name>VETA.Thu</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetathursday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732710</oid><name>VETA.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetaallinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732711</oid><name>VETA.Fri</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetafriday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732712</oid><name>VR1.ET.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vretinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732713</oid><name>TimerHH</name><protocolType>DateTime Protocol</protocolType><protocolAttributes><entry><string>timezone</string><string>Europe/Amsterdam</string></entry><entry><string>command</string><string>date</string></entry><entry><string>pollingInterval</string><string>1m</string></entry><entry><string>format</string><string>HH:mm:ss</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732714</oid><name>VETA</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetaall</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732715</oid><name>TimerMMM</name><protocolType>DateTime Protocol</protocolType><protocolAttributes><entry><string>timezone</string><string>Europe/Amsterdam</string></entry><entry><string>command</string><string>date</string></entry><entry><string>pollingInterval</string><string>1m</string></entry><entry><string>format</string><string>MMM</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732716</oid><name>TimerEEE</name><protocolType>DateTime Protocol</protocolType><protocolAttributes><entry><string>timezone</string><string>Europe/Amsterdam</string></entry><entry><string>command</string><string>date</string></entry><entry><string>pollingInterval</string><string>1m</string></entry><entry><string>format</string><string>EEE</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732717</oid><name>VDepartureBackground</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VDepartureBackground</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732718</oid><name>VETA.Sun</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetasun</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732719</oid><name>VATA</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VATA</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732720</oid><name>VETD</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdall</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732721</oid><name>VACATION</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VABSENT</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732722</oid><name>VETD.Mon</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vetdmonday</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732723</oid><name>VPERSONSENSETIME</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VPERSONSENSETIME</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Sun</name><type>CUSTOM</type><commandName>VETD.Sun (Times)</commandName><states></states><oid>258442</oid><command><id>732695</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Fri</name><type>CUSTOM</type><commandName>VETA.Fri (Times)</commandName><states></states><oid>258443</oid><command><id>732711</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.dec</name><type>CUSTOM</type><commandName>VETA.dec (Times)</commandName><states></states><oid>258444</oid><command><id>732690</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VACATION.inc</name><type>CUSTOM</type><commandName>VACATION.inc (Times)</commandName><states></states><oid>258445</oid><command><id>732698</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Mon</name><type>CUSTOM</type><commandName>VETD.Mon (Times)</commandName><states></states><oid>258446</oid><command><id>732722</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Thu</name><type>CUSTOM</type><commandName>VETA.Thu (Times)</commandName><states></states><oid>258447</oid><command><id>732709</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Mon</name><type>CUSTOM</type><commandName>VETA.Mon (Times)</commandName><states></states><oid>258448</oid><command><id>732691</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Wed</name><type>CUSTOM</type><commandName>VETD.Wed (Times)</commandName><states></states><oid>258449</oid><command><id>732705</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.inc</name><type>CUSTOM</type><commandName>VETD.inc (Times)</commandName><states></states><oid>258450</oid><command><id>732704</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD</name><type>CUSTOM</type><commandName>VETD (Times)</commandName><states></states><oid>258451</oid><command><id>732720</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VACATION</name><type>CUSTOM</type><commandName>VACATION (Times)</commandName><states></states><oid>258452</oid><command><id>732721</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>TimerMMM</name><type>CUSTOM</type><commandName>TimerMMM (Times)</commandName><states></states><oid>258453</oid><command><id>732715</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VPRESENCE</name><type>CUSTOM</type><commandName>VPRESENCE (Times)</commandName><states><entry><string>Yes</string><string>Yes</string></entry><entry><string>No</string><string>No</string></entry></states><oid>258454</oid><command><id>732687</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VPERSONSENSETIME</name><type>CUSTOM</type><commandName>VPERSONSENSETIME (Times)</commandName><states></states><oid>258455</oid><command><id>732723</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.ET.dec</name><type>CUSTOM</type><commandName>VR1.ET.dec (Times)</commandName><states></states><oid>258456</oid><command><id>732693</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>TimerEEEE</name><type>CUSTOM</type><commandName>TimerEEEE (Times)</commandName><states></states><oid>258457</oid><command><id>732699</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VPERSONSENSE</name><type>CUSTOM</type><commandName>VPERSONSENSE (Times)</commandName><states></states><oid>258458</oid><command><id>732702</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Sat</name><type>CUSTOM</type><commandName>VETA.Sat (Times)</commandName><states></states><oid>258459</oid><command><id>732694</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.ET</name><type>CUSTOM</type><commandName>VR1.ET (Times)</commandName><states></states><oid>258460</oid><command><id>732708</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.dec</name><type>CUSTOM</type><commandName>VETD.dec (Times)</commandName><states></states><oid>258461</oid><command><id>732703</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.inc</name><type>CUSTOM</type><commandName>VETA.inc (Times)</commandName><states></states><oid>258462</oid><command><id>732710</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Sun</name><type>CUSTOM</type><commandName>VETA.Sun (Times)</commandName><states></states><oid>258463</oid><command><id>732718</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VATA</name><type>CUSTOM</type><commandName>VATA (Times)</commandName><states></states><oid>258464</oid><command><id>732719</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VNEXTACTION</name><type>CUSTOM</type><commandName>VNEXTACTION (Times)</commandName><states></states><oid>258465</oid><command><id>732685</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA</name><type>CUSTOM</type><commandName>VETA (Times)</commandName><states></states><oid>258466</oid><command><id>732714</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VArrivalBackground</name><type>CUSTOM</type><commandName>VArrivalBackground (Times)</commandName><states><entry><string>off</string><string>off</string></entry><entry><string>on</string><string>on</string></entry></states><oid>258467</oid><command><id>732707</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VTimer</name><type>CUSTOM</type><commandName>VTimer (Times)</commandName><states></states><oid>258468</oid><command><id>732689</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>TimerHH</name><type>CUSTOM</type><commandName>TimerHH (Times)</commandName><states></states><oid>258469</oid><command><id>732713</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VDepartureBackground</name><type>CUSTOM</type><commandName>VDepartureBackground (Times)</commandName><states><entry><string>off</string><string>off</string></entry><entry><string>on</string><string>on</string></entry></states><oid>258470</oid><command><id>732717</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Sat</name><type>CUSTOM</type><commandName>VETD.Sat (Times)</commandName><states></states><oid>258471</oid><command><id>732700</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Thu</name><type>CUSTOM</type><commandName>VETD.Thu (Times)</commandName><states></states><oid>258472</oid><command><id>732696</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Timerd</name><type>CUSTOM</type><commandName>Timerd (Times)</commandName><states></states><oid>258473</oid><command><id>732686</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VACATION.dec</name><type>CUSTOM</type><commandName>VACATION.dec (Times)</commandName><states></states><oid>258474</oid><command><id>732701</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Tue</name><type>CUSTOM</type><commandName>VETD.Tue (Times)</commandName><states></states><oid>258475</oid><command><id>732697</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.ET.inc</name><type>CUSTOM</type><commandName>VR1.ET.inc (Times)</commandName><states></states><oid>258476</oid><command><id>732712</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Wed</name><type>CUSTOM</type><commandName>VETA.Wed (Times)</commandName><states></states><oid>258477</oid><command><id>732706</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>TimerEEE</name><type>CUSTOM</type><commandName>TimerEEE (Times)</commandName><states></states><oid>258478</oid><command><id>732716</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETD.Fri</name><type>CUSTOM</type><commandName>VETD.Fri (Times)</commandName><states></states><oid>258479</oid><command><id>732692</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VATD</name><type>CUSTOM</type><commandName>VATD (Times)</commandName><states></states><oid>258480</oid><command><id>732684</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VETA.Tue</name><type>CUSTOM</type><commandName>VETA.Tue (Times)</commandName><states></states><oid>258481</oid><command><id>732683</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35479</oid><name>Efficiency</name><vendor>OR</vendor><model>OR</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732724</oid><name>VTOTALSCORE.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VTOTALSCOREinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732725</oid><name>VLEAF3</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vleafthree</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732726</oid><name>VTOTALSCOREdisp</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VTOTALSCOREdisp</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732727</oid><name>VLEVEL</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VLEVEL</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732728</oid><name>VLEAVES</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VLEAVES</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732729</oid><name>VLEAF1</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vleafone</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732730</oid><name>VTOTALSCORE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VTOTALSCORE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732731</oid><name>VLEAF2</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vleaftwo</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732732</oid><name>VSCORE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VSCORE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VTOTALSCOREr</name><type>RANGE</type><commandName>VTOTALSCORE (Efficiency)</commandName><minValue>0</minValue><maxValue>1000</maxValue><oid>258482</oid><command><id>732730</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VTOTALSCORE</name><type>CUSTOM</type><commandName>VTOTALSCORE (Efficiency)</commandName><states></states><oid>258483</oid><command><id>732730</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VLEVEL</name><type>CUSTOM</type><commandName>VLEVEL (Efficiency)</commandName><states></states><oid>258484</oid><command><id>732727</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VLEAF1</name><type>CUSTOM</type><commandName>VLEAF1 (Efficiency)</commandName><states><entry><string>l1.png</string><string>l1.png</string></entry><entry><string>l2.png</string><string>l2.png</string></entry><entry><string>l0.png</string><string>l0.png</string></entry></states><oid>258485</oid><command><id>732729</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VTOTALSCOREdisp</name><type>CUSTOM</type><commandName>VTOTALSCOREdisp (Efficiency)</commandName><states></states><oid>258486</oid><command><id>732726</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VSCORE</name><type>CUSTOM</type><commandName>VSCORE (Efficiency)</commandName><states></states><oid>258487</oid><command><id>732732</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VLEAVES</name><type>CUSTOM</type><commandName>VLEAVES (Efficiency)</commandName><states></states><oid>258488</oid><command><id>732728</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VLEAF3</name><type>CUSTOM</type><commandName>VLEAF3 (Efficiency)</commandName><states><entry><string>l1.png</string><string>l1.png</string></entry><entry><string>l2.png</string><string>l2.png</string></entry><entry><string>l0.png</string><string>l0.png</string></entry></states><oid>258489</oid><command><id>732725</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VLEAF2</name><type>CUSTOM</type><commandName>VLEAF2 (Efficiency)</commandName><states><entry><string>l1.png</string><string>l1.png</string></entry><entry><string>l2.png</string><string>l2.png</string></entry><entry><string>l0.png</string><string>l0.png</string></entry></states><oid>258490</oid><command><id>732731</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches></switches><sliders><org.openremote.modeler.shared.dto.SliderDetailsDTO><oid>113080</oid><name>VTOTALSCORE</name><sensor><id>258482</id></sensor></org.openremote.modeler.shared.dto.SliderDetailsDTO></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35480</oid><name>Heating</name><vendor>or</vendor><model>or</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732733</oid><name>VHEATINGSETPOINT</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VHEATINGSETPOINT</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732734</oid><name>VHEATING</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VHEATING</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732735</oid><name>VR1.TEMPERATURE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrtemperature</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732736</oid><name>VR1.COMFORT</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrcomfort</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732737</oid><name>VR1.TEMPERATURE.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrtemperatureinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732738</oid><name>VR1.COMFORT.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrcomfortinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732739</oid><name>VR1.COMFORT.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrcomfortdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732740</oid><name>VROOMTEMPERATURE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VROOMTEMPERATURE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732741</oid><name>VWINDOW</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VWINDOW</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732742</oid><name>VR1.TEMPERATURE.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>vrtemperaturedec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732743</oid><name>VOUTSIDE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VOUTSIDE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732744</oid><name>VADVICEDONE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VADVICEDONE</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732745</oid><name>VSUMMER</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VSUMMER</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732746</oid><name>VADVICE</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>VADVICE</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VSUMMER</name><type>CUSTOM</type><commandName>VSUMMER (Heating)</commandName><states><entry><string>Yes</string><string>Yes</string></entry><entry><string>No</string><string>No</string></entry></states><oid>258491</oid><command><id>732745</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VADVICEDONE</name><type>CUSTOM</type><commandName>VADVICEDONE (Heating)</commandName><states></states><oid>258492</oid><command><id>732744</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.COMFORT.inc</name><type>CUSTOM</type><commandName>VR1.COMFORT.inc (Heating)</commandName><states></states><oid>258493</oid><command><id>732738</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.COMFORT</name><type>CUSTOM</type><commandName>VR1.COMFORT (Heating)</commandName><states></states><oid>258494</oid><command><id>732736</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VOUTSIDE</name><type>CUSTOM</type><commandName>VOUTSIDE (Heating)</commandName><states></states><oid>258495</oid><command><id>732743</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VWINDOW</name><type>CUSTOM</type><commandName>VWINDOW (Heating)</commandName><states><entry><string>Open</string><string>Open</string></entry><entry><string>Closed</string><string>Closed</string></entry></states><oid>258496</oid><command><id>732741</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VHEATINGSETPOINT</name><type>CUSTOM</type><commandName>VHEATINGSETPOINT (Heating)</commandName><states></states><oid>258497</oid><command><id>732733</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.TEMPERATURE.inc</name><type>CUSTOM</type><commandName>VR1.TEMPERATURE.inc (Heating)</commandName><states></states><oid>258498</oid><command><id>732737</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.COMFORT.dec</name><type>CUSTOM</type><commandName>VR1.COMFORT.dec (Heating)</commandName><states></states><oid>258499</oid><command><id>732739</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VROOMTEMPERATURE</name><type>CUSTOM</type><commandName>VROOMTEMPERATURE (Heating)</commandName><states></states><oid>258500</oid><command><id>732740</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VHEATING</name><type>CUSTOM</type><commandName>VHEATING (Heating)</commandName><states></states><oid>258501</oid><command><id>732734</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.TEMPERATURE.dec</name><type>CUSTOM</type><commandName>VR1.TEMPERATURE.dec (Heating)</commandName><states></states><oid>258502</oid><command><id>732742</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VR1.TEMPERATURE</name><type>CUSTOM</type><commandName>VR1.TEMPERATURE (Heating)</commandName><states></states><oid>258503</oid><command><id>732735</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>VADVICE</name><type>CUSTOM</type><commandName>VADVICE (Heating)</commandName><states></states><oid>258504</oid><command><id>732746</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35481</oid><name>Config</name><vendor>or</vendor><model>or</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732747</oid><name>GVconfig</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>GVconfig</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GVconfig</name><type>CUSTOM</type><commandName>GVconfig (Config)</commandName><states></states><oid>258505</oid><command><id>732747</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35487</oid><name>PID</name><vendor>OpenRemote</vendor><model>standard</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732773</oid><name>GV.PID.Kd</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkd</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732774</oid><name>GV.PID.Kp</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkp</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732775</oid><name>GV.PID.Ki</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidki</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732776</oid><name>PID.db.inc.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>piddbinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732777</oid><name>PID.kd.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkdinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732778</oid><name>PID.ki.inc.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkiinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732779</oid><name>PID.kp.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>kpdec</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732780</oid><name>PID.Se</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidse</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732781</oid><name>GV.PID.Sp</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidsp</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732782</oid><name>PID.ki.dec.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkidec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732783</oid><name>PID.kd.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkddec</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732784</oid><name>PID.db.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>piddbdec</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732785</oid><name>PID.kd.dec.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkddec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732786</oid><name>PID.Output</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidoutput</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732787</oid><name>PID.kd.inc.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkdinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732788</oid><name>PID.sp.dec.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidspdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732789</oid><name>PID.db.dec.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>piddbdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732790</oid><name>PID.sp.inc.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidspinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732791</oid><name>PID.ki.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkidec</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732792</oid><name>PID.kp.inc.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>kpinc</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732793</oid><name>PID.db.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>piddbinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732794</oid><name>PID.ki.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidkiinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732795</oid><name>GV.PID.Db</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>piddb</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732796</oid><name>PID.sp.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidspdec</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732797</oid><name>PID.sp.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>pidspinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732798</oid><name>PID.kp.dec.ON</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>kpdec</string></entry><entry><string>command</string><string>ON</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732799</oid><name>PID.kp.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>kpinc</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.sp.dec</name><type>CUSTOM</type><commandName>PID.sp.dec (PID)</commandName><states></states><oid>258525</oid><command><id>732796</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.kd.inc</name><type>CUSTOM</type><commandName>PID.kd.inc (PID)</commandName><states></states><oid>258526</oid><command><id>732777</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.db.inc</name><type>CUSTOM</type><commandName>PID.db.inc (PID)</commandName><states></states><oid>258527</oid><command><id>732793</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.kp.dec</name><type>CUSTOM</type><commandName>PID.kp.dec (PID)</commandName><states></states><oid>258528</oid><command><id>732779</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.Se</name><type>CUSTOM</type><commandName>PID.Se (PID)</commandName><states></states><oid>258529</oid><command><id>732780</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.ki.dec</name><type>CUSTOM</type><commandName>PID.ki.dec (PID)</commandName><states></states><oid>258530</oid><command><id>732791</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GV.PID.Sp</name><type>CUSTOM</type><commandName>GV.PID.Sp (PID)</commandName><states></states><oid>258531</oid><command><id>732781</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.Output</name><type>CUSTOM</type><commandName>PID.Output (PID)</commandName><states></states><oid>258532</oid><command><id>732786</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.db.dec</name><type>CUSTOM</type><commandName>PID.db.dec (PID)</commandName><states></states><oid>258533</oid><command><id>732784</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GV.PID.Ki</name><type>CUSTOM</type><commandName>GV.PID.Ki (PID)</commandName><states></states><oid>258534</oid><command><id>732775</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.kd.dec</name><type>CUSTOM</type><commandName>PID.kd.dec (PID)</commandName><states></states><oid>258535</oid><command><id>732783</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GV.PID.Db</name><type>CUSTOM</type><commandName>GV.PID.Db (PID)</commandName><states></states><oid>258536</oid><command><id>732795</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.sp.inc</name><type>CUSTOM</type><commandName>PID.sp.inc (PID)</commandName><states></states><oid>258537</oid><command><id>732797</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GV.PID.Kp</name><type>CUSTOM</type><commandName>GV.PID.Kp (PID)</commandName><states></states><oid>258538</oid><command><id>732774</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.kp.inc</name><type>CUSTOM</type><commandName>PID.kp.inc (PID)</commandName><states></states><oid>258539</oid><command><id>732799</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>PID.ki.inc</name><type>CUSTOM</type><commandName>PID.ki.inc (PID)</commandName><states></states><oid>258540</oid><command><id>732794</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>GV.PID.Kd</name><type>CUSTOM</type><commandName>GV.PID.Kd (PID)</commandName><states></states><oid>258541</oid><command><id>732773</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>35488</oid><name>Fake sensors</name><vendor>Openremote</vendor><model>Openremote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732803</oid><name>FS.Tinside</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fstinside</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732806</oid><name>FS.Toutside.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fsoutsideinc</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732807</oid><name>FS.PIR.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fspir</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732808</oid><name>FS.Window.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fswindow</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732809</oid><name>FS.Toutside</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fsoutside</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732810</oid><name>FS.Window.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fswindow</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732811</oid><name>FS.Toutside.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fsoutsidedec</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732812</oid><name>FS.Tinside.dec</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fstinsidedec</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732813</oid><name>FS.Tinside.inc</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fstinsideinc</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>732814</oid><name>FS.PIR.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>fspir</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Toutside</name><type>CUSTOM</type><commandName>FS.Toutside (Fake sensors)</commandName><states></states><oid>258542</oid><command><id>732809</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Toutside.inc</name><type>CUSTOM</type><commandName>FS.Toutside.inc (Fake sensors)</commandName><states></states><oid>258543</oid><command><id>732806</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Tinside.dec</name><type>CUSTOM</type><commandName>FS.Tinside.dec (Fake sensors)</commandName><states></states><oid>258544</oid><command><id>732812</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Tinside</name><type>CUSTOM</type><commandName>FS.Tinside (Fake sensors)</commandName><states></states><oid>258545</oid><command><id>732803</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Toutside.dec</name><type>CUSTOM</type><commandName>FS.Toutside.dec (Fake sensors)</commandName><states></states><oid>258546</oid><command><id>732811</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Tinside.inc</name><type>CUSTOM</type><commandName>FS.Tinside.inc (Fake sensors)</commandName><states></states><oid>258547</oid><command><id>732813</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.PIR</name><type>SWITCH</type><commandName>FS.PIR.(OFF) (Fake sensors)</commandName><oid>258548</oid><command><id>732814</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>FS.Window</name><type>SWITCH</type><commandName>FS.Window.(OFF) (Fake sensors)</commandName><oid>258549</oid><command><id>732810</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>97011</oid><name>FS.PIR</name><sensor><id>258548</id></sensor><onCommand><id>732807</id></onCommand><onCommandDisplayName>FS.PIR.(ON)</onCommandDisplayName><offCommand><id>732814</id></offCommand><offCommandDisplayName>FS.PIR.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>97012</oid><name>FS.Window</name><sensor><id>258549</id></sensor><onCommand><id>732808</id></onCommand><onCommandDisplayName>FS.Window.(ON)</onCommandDisplayName><offCommand><id>732810</id></offCommand><offCommandDisplayName>FS.Window.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>36090</oid><name>Fake Light</name><vendor>OpenRemote</vendor><model>OpenRemote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750841</oid><name>Light.Smart.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightsmart</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750842</oid><name>Light.Smart.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightsmart</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750843</oid><name>Light.Scene1.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightsceneone</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750844</oid><name>Light.Scene1.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightsceneone</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750845</oid><name>Light.Scene2.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenetwo</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750846</oid><name>Light.Scene2.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenetwo</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750847</oid><name>Light.Scene3.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenethree</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750848</oid><name>Light.Scene3.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenethree</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750849</oid><name>Light.Scene4.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenefour</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750850</oid><name>Light.Scene4.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>lightscenefour</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Light.Smart</name><type>SWITCH</type><commandName>Light.Smart.(OFF) (Fake Light)</commandName><oid>264338</oid><command><id>750842</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Light.Scene1</name><type>SWITCH</type><commandName>Light.Scene1.(OFF) (Fake Light)</commandName><oid>264339</oid><command><id>750844</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Light.Scene2</name><type>SWITCH</type><commandName>Light.Scene2.(ON) (Fake Light)</commandName><oid>264340</oid><command><id>750846</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Light.Scene3</name><type>SWITCH</type><commandName>Light.Scene3.(OFF) (Fake Light)</commandName><oid>264341</oid><command><id>750848</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Light.Scene4</name><type>SWITCH</type><commandName>Light.Scene4.(ON) (Fake Light)</commandName><oid>264342</oid><command><id>750850</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100381</oid><name>Light.Smart</name><sensor><id>264338</id></sensor><onCommand><id>750841</id></onCommand><onCommandDisplayName>Light.Smart.(ON)</onCommandDisplayName><offCommand><id>750842</id></offCommand><offCommandDisplayName>Light.Smart.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100382</oid><name>Light.Scene1</name><sensor><id>264339</id></sensor><onCommand><id>750843</id></onCommand><onCommandDisplayName>Light.Scene1.(ON)</onCommandDisplayName><offCommand><id>750844</id></offCommand><offCommandDisplayName>Light.Scene1.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100383</oid><name>Light.Scene2</name><sensor><id>264340</id></sensor><onCommand><id>750846</id></onCommand><onCommandDisplayName>Light.Scene2.(ON)</onCommandDisplayName><offCommand><id>750845</id></offCommand><offCommandDisplayName>Light.Scene2.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100384</oid><name>Light.Scene3</name><sensor><id>264341</id></sensor><onCommand><id>750847</id></onCommand><onCommandDisplayName>Light.Scene3.(ON)</onCommandDisplayName><offCommand><id>750848</id></offCommand><offCommandDisplayName>Light.Scene3.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100385</oid><name>Light.Scene4</name><sensor><id>264342</id></sensor><onCommand><id>750850</id></onCommand><onCommandDisplayName>Light.Scene4.(ON)</onCommandDisplayName><offCommand><id>750849</id></offCommand><offCommandDisplayName>Light.Scene4.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>36091</oid><name>Fake Start</name><vendor>OpenRemote</vendor><model>OpenRemote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750851</oid><name>Smart.device2.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstarttwo</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750852</oid><name>Smart.Start.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstart</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750853</oid><name>Smart.device1.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstartone</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750854</oid><name>Smart.device2.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstarttwo</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750855</oid><name>Smart.Start.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstart</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750856</oid><name>Smart.device1.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstartone</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>755686</oid><name>Smart.Start.Time</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartstarttime</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Smart.device2</name><type>SWITCH</type><commandName>Smart.device2.(ON) (Fake Start)</commandName><oid>264343</oid><command><id>750851</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Smart.device1</name><type>SWITCH</type><commandName>Smart.device1.(ON) (Fake Start)</commandName><oid>264344</oid><command><id>750853</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Smart.Start</name><type>SWITCH</type><commandName>Smart.Start.(OFF) (Fake Start)</commandName><oid>264345</oid><command><id>750855</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Smart.Start.Time</name><type>CUSTOM</type><commandName>Smart.Start.Time (Fake Start)</commandName><states></states><oid>265672</oid><command><id>755686</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100386</oid><name>Smart.Start</name><sensor><id>264345</id></sensor><onCommand><id>750852</id></onCommand><onCommandDisplayName>Smart.Start.(ON)</onCommandDisplayName><offCommand><id>750855</id></offCommand><offCommandDisplayName>Smart.Start.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100387</oid><name>Smart.device1</name><sensor><id>264344</id></sensor><onCommand><id>750853</id></onCommand><onCommandDisplayName>Smart.device1.(ON)</onCommandDisplayName><offCommand><id>750856</id></offCommand><offCommandDisplayName>Smart.device1.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100388</oid><name>Smart.device2</name><sensor><id>264343</id></sensor><onCommand><id>750851</id></onCommand><onCommandDisplayName>Smart.device2.(ON)</onCommandDisplayName><offCommand><id>750854</id></offCommand><offCommandDisplayName>Smart.device2.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>36092</oid><name>Fake Safety</name><vendor>OpenRemote</vendor><model>OpenRemote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750857</oid><name>Safety.Alarm.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>safetyalarm</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750858</oid><name>Safety.Smart.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartsafety</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750859</oid><name>Safety.Smart.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>smartsafety</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750860</oid><name>Safety.Alarm.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>safetyalarm</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>755687</oid><name>Safety.Alarm.Image</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>safetyalarmimage</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Safety.Alarm</name><type>SWITCH</type><commandName>Safety.Alarm.(ON) (Fake Safety)</commandName><oid>264346</oid><command><id>750857</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Safety.Smart</name><type>SWITCH</type><commandName>Safety.Smart.(ON) (Fake Safety)</commandName><oid>264347</oid><command><id>750858</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Safety.Alarm.Image</name><type>CUSTOM</type><commandName>Safety.Alarm.Image (Fake Safety)</commandName><states><entry><string>off</string><string>off</string></entry><entry><string>on</string><string>on</string></entry></states><oid>265673</oid><command><id>755687</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100389</oid><name>Safety.Alarm</name><sensor><id>264346</id></sensor><onCommand><id>750857</id></onCommand><onCommandDisplayName>Safety.Alarm.(ON)</onCommandDisplayName><offCommand><id>750860</id></offCommand><offCommandDisplayName>Safety.Alarm.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100390</oid><name>Safety.Smart</name><sensor><id>264347</id></sensor><onCommand><id>750858</id></onCommand><onCommandDisplayName>Safety.Smart.(ON)</onCommandDisplayName><offCommand><id>750859</id></offCommand><offCommandDisplayName>Safety.Smart.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>36093</oid><name>Fake Climate</name><vendor>OpenRemote</vendor><model>OpenRemote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750861</oid><name>Climate.Day.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climateday</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750862</oid><name>Climate.Smart.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatesmart</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750863</oid><name>Climate.Night.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatenight</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750864</oid><name>Climate.Smart.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatesmart</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750865</oid><name>Climate.Night.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatenight</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750866</oid><name>Climate.Day.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climateday</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750867</oid><name>Climate.Vent.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatevent</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750868</oid><name>Climate.Vent.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatevent</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>755688</oid><name>Climate.Day.Temp</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatedaytemp</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>755689</oid><name>Climate.Night.Temp</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climatenighttemp</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>755690</oid><name>Climate.Vent.State</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>climateventstate</string></entry><entry><string>command</string><string>status</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Smart</name><type>SWITCH</type><commandName>Climate.Smart.(OFF) (Fake Climate)</commandName><oid>264348</oid><command><id>750864</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Day</name><type>SWITCH</type><commandName>Climate.Day.(OFF) (Fake Climate)</commandName><oid>264349</oid><command><id>750866</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Night</name><type>SWITCH</type><commandName>Climate.Night.(OFF) (Fake Climate)</commandName><oid>264350</oid><command><id>750865</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Vent</name><type>SWITCH</type><commandName>Climate.Vent.(OFF) (Fake Climate)</commandName><oid>264351</oid><command><id>750868</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Day.Temp</name><type>CUSTOM</type><commandName>Climate.Day.Temp (Fake Climate)</commandName><states></states><oid>265674</oid><command><id>755688</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Night.Temp</name><type>CUSTOM</type><commandName>Climate.Night.Temp (Fake Climate)</commandName><states></states><oid>265675</oid><command><id>755689</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Climate.Vent.State</name><type>CUSTOM</type><commandName>Climate.Vent.State (Fake Climate)</commandName><states></states><oid>265676</oid><command><id>755690</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100391</oid><name>Climate.Smart</name><sensor><id>264348</id></sensor><onCommand><id>750862</id></onCommand><onCommandDisplayName>Climate.Smart.(ON)</onCommandDisplayName><offCommand><id>750864</id></offCommand><offCommandDisplayName>Climate.Smart.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100392</oid><name>Climate.Day</name><sensor><id>264349</id></sensor><onCommand><id>750861</id></onCommand><onCommandDisplayName>Climate.Day.(ON)</onCommandDisplayName><offCommand><id>750866</id></offCommand><offCommandDisplayName>Climate.Day.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100393</oid><name>Climate.Night</name><sensor><id>264350</id></sensor><onCommand><id>750863</id></onCommand><onCommandDisplayName>Climate.Night.(ON)</onCommandDisplayName><offCommand><id>750865</id></offCommand><offCommandDisplayName>Climate.Night.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100394</oid><name>Climate.Vent</name><sensor><id>264351</id></sensor><onCommand><id>750867</id></onCommand><onCommandDisplayName>Climate.Vent.(ON)</onCommandDisplayName><offCommand><id>750868</id></offCommand><offCommandDisplayName>Climate.Vent.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO><oid>36094</oid><name>Fake Menu</name><vendor>OpenRemote</vendor><model>OpenRemote</model><deviceCommands><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750871</oid><name>Menu.Smart.(ON)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>menusmart</string></entry><entry><string>command</string><string>on</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO><oid>750872</oid><name>Menu.Smart.(OFF)</name><protocolType>In-memory Virtual Command</protocolType><protocolAttributes><entry><string>address</string><string>menusmart</string></entry><entry><string>command</string><string>off</string></entry></protocolAttributes></org.openremote.modeler.shared.dto.DeviceCommandDetailsDTO></deviceCommands><sensors><org.openremote.modeler.shared.dto.SensorDetailsDTO><name>Menu.Smart</name><type>SWITCH</type><commandName>Menu.Smart.(OFF) (Fake Menu)</commandName><oid>264354</oid><command><id>750872</id></command></org.openremote.modeler.shared.dto.SensorDetailsDTO></sensors><switches><org.openremote.modeler.shared.dto.SwitchDetailsDTO><oid>100395</oid><name>Menu.Smart</name><sensor><id>264354</id></sensor><onCommand><id>750871</id></onCommand><onCommandDisplayName>Menu.Smart.(ON)</onCommandDisplayName><offCommand><id>750872</id></offCommand><offCommandDisplayName>Menu.Smart.(OFF)</offCommandDisplayName></org.openremote.modeler.shared.dto.SwitchDetailsDTO></switches><sliders></sliders></org.openremote.modeler.shared.dto.DeviceDetailsWithChildrenDTO></list></entry></map>